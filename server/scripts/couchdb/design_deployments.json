{
   "_id": "_design/deployments",
   "language": "javascript",
   "views": {
       "allDeployments": {
           "map": "function(doc) {\n  if (doc.resource === 'Deployment') {\n    emit(doc._id,doc);\n  }\n}"
       },
       "openDeployments": {
           "map": "function(doc) {\n  if (doc.resource && doc.resource === 'Deployment' && !doc.end_datetime) {\n    emit(doc._id,doc);\n  }\n}"
       },
       "deploymentsByName": {
           "map": "function(doc) {\n  // Make sure it is a deployment first\n  if (doc.resource && doc.resource === \"Deployment\") {\n  // Create a condensed deployment for just the information we need\n  var condensedDeployment = {};\n\n  // Add the ID\n  condensedDeployment._id = doc._id;\n\n  // Add the name\n  condensedDeployment.name = doc.name;\n\n  // Add the dates\n  condensedDeployment.startdate = doc.startdate;\n  condensedDeployment.enddate = doc.enddate;\n\n  // Add the ESP information\n  condensedDeployment.esp = doc.esp;\n\n  // Add the processRuns\n  condensedDeployment.processRuns = doc.processRuns;\n\n  // Add the samples\n  condensedDeployment.samples = doc.samples;\n\n  // Add the errors\n  condensedDeployment.errors = doc.errors;\n\n  // And the images\n  condensedDeployment.images = doc.images;\n\n  // Now add an array ancillary sources;\n  condensedDeployment.anc_source_array = [];\n  for (var anckey in doc.ancillary_data) {\n    for (var logUnit in doc.ancillary_data[anckey]) {\n      condensedDeployment.anc_source_array.push({\n        \"source\":anckey,\n        \"log_unit\":logUnit,\n        \"var_name\":doc.ancillary_data[anckey][logUnit].var_name,\n        \"var_long_name\":doc.ancillary_data[anckey][logUnit].var_long_name,\n        \"units\":doc.ancillary_data[anckey][logUnit].units,\n        \"numPoints\":doc.ancillary_data[anckey][logUnit].numPoints,\n        \"source_id\":doc.ancillary_data[anckey][logUnit].source_id\n      });\n    }\n  }\n  emit(doc.name, condensedDeployment);\n  }\n}"
       },
       "allDeploymentNames": {
           "map": "function(doc) {\n  if (doc.resource && doc.resource === 'Deployment') {\n  emit(doc.name,null);\n}\n}",
           "reduce": "function(keys, values) {\n  return true;\n}"
       }
   }
}